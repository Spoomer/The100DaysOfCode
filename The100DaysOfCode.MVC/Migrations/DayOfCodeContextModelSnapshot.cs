// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace The100DaysOfCode.MVC.Migrations
{
    [DbContext(typeof(DayOfCodeContext))]
    partial class DayOfCodeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("The100DaysOfCode.MVC.Models.DayOfCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DayOfCode");
                });

            modelBuilder.Entity("The100DaysOfCode.MVC.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Check")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayOfCodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DayOfCodeId");

                    b.ToTable("Goal");
                });

            modelBuilder.Entity("The100DaysOfCode.MVC.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayOfCodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DayOfCodeId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("The100DaysOfCode.MVC.Models.Goal", b =>
                {
                    b.HasOne("The100DaysOfCode.MVC.Models.DayOfCode", null)
                        .WithMany("Goals")
                        .HasForeignKey("DayOfCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("The100DaysOfCode.MVC.Models.Note", b =>
                {
                    b.HasOne("The100DaysOfCode.MVC.Models.DayOfCode", null)
                        .WithMany("Notes")
                        .HasForeignKey("DayOfCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("The100DaysOfCode.MVC.Models.DayOfCode", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
